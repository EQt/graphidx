branches:
  only:
    - master

notifications:
  - provider: Email
    to:
      - '{{commitAuthorEmail}}'
    on_build_status_changed: true

platform: x64
configuration: Release
image: Visual Studio 2017

environment:
  matrix:
    - lang: Rust
    - lang: Python3.7
    - lang: Julia 1.2
    - lang: C++

for:
  -
    matrix:
      only:
        - lang: C++
    build:
      parallel: true
      verbosity: detailed
    only_commits:
      files:
        - .appveyor.yml
        - CMakeLists.txt
        - cxx/
        - deps/pybind11/
        - deps/doctest/
    build_script:
      - echo %APPVEYOR_BUILD_FOLDER%
      - mkdir build.appveyor && cd build.appveyor && cmake .. -A x64 -DPYTHON_EXECUTABLE:FILEPATH=C:\Python37-x64\python.exe
      - cmake --build . --target doctests --config "%CONFIGURATION%"

    test_script: "%CONFIGURATION%\\doctests.exe -s"

  -
    matrix:
      only:
        - lang: Python3.7
    only_commits:
      files:
        - .appveyor.yml
        - cxx/
        - python/
        - deps/pybind11/
    build_script:
      - SET PATH=C:\Python37-x64;C:\Python37-x64\Scripts;%PATH%
      - python --version
      - git submodule update --init deps/pybind11
      - pip install -r python/requirements.txt -r python/test/requirements.txt
      - cd python && python setup.py install
    test_script: pytest test

  -
    matrix:
      only:
        - lang: Julia 1.2
    only_commits:
      files:
        - .appveyor.yml
        - julia/
        - docs/src/julia/
    environment:
      julia_version: 1.2
      hub: "https://raw.githubusercontent.com/JuliaCI/Appveyor.jl"
      url: "version-1/bin/install.ps1"
    install:
      - ps: iex ((new-object net.webclient).DownloadString("$env:hub/$env:url"))
      - SET PATH=C:\julia\bin;%PATH%
      - julia --version
    build_script:
      - julia --project=julia -e "using Pkg; Pkg.instantiate(); Pkg.build()"
    test_script:
      - julia --project=julia -e "using Pkg; Pkg.test()"

  -
    matrix:
      only:
        - lang: Rust
    only_commits:
      files:
        - .appveyor.yml
        - Cargo.toml
        - rust/
    environment:
      target: x86_64-pc-windows-msvc
      channel: stable
    install:
      - curl -sSf -o rustup-init.exe https://win.rustup.rs
      - rustup-init.exe --default-host %TARGET% --default-toolchain %CHANNEL% -y  
      - set PATH=%HOMEPATH%\.cargo\bin;%PATH%
      - rustc -Vv
      - cargo -V
    build_script:
      - cargo build --verbose
    test_script:
      - cargo test
