module TestMagick
using Test


const msg_gz = [
    0x1F, 0x8B, 0x08, 0x08, 0x36, 0xBF, 0x68, 0x5E,
    0x00, 0x03, 0x6D, 0x73, 0x67, 0x2E, 0x74, 0x78,
    0x74, 0x00, 0xCB, 0x48, 0xCD, 0xC9, 0xC9, 0x57,
    0x48, 0x2F, 0x4A, 0x2C, 0xC8, 0xC8, 0x4C, 0xA9,
    0xE0, 0x02, 0x00, 0xCC, 0x85, 0x6F, 0x30, 0x0F,
    0x00, 0x00, 0x00
]


const msg_bz2 = [
    0x42, 0x5A, 0x68, 0x39, 0x31, 0x41, 0x59, 0x26,
    0x53, 0x59, 0x0D, 0x64, 0xB8, 0xC6, 0x00, 0x00,
    0x03, 0x51, 0x80, 0x00, 0x10, 0x40, 0x00, 0x26,
    0xE4, 0xD0, 0x40, 0x20, 0x00, 0x31, 0x00, 0xD0,
    0x01, 0x43, 0x46, 0x87, 0xEA, 0x9F, 0xA8, 0x88,
    0x4C, 0xB0, 0x36, 0x16, 0x85, 0xDC, 0x91, 0x4E,
    0x14, 0x24, 0x03, 0x59, 0x2E, 0x31, 0x80
]

const msg_txt = "hello graphidx\n"


is_gzip(io::IO)::Bool =
    read(io, 2) == [0x1F, 0x8B]

is_gzip(path::String)::Bool =
    is_gzip(open(path))

is_bzip2(io::IO)::Bool =
    read(io, 3) == UInt8['B', 'Z', 'h']

is_bzip2(path::String)::Bool =
    is_bzip2(open(path))


@testset "Magick Bytes                   " begin
    @test is_gzip(IOBuffer(msg_gz))
    @test !is_gzip(IOBuffer(msg_bz2))
    @test !is_gzip(IOBuffer(msg_txt))
    @test !is_bzip2(IOBuffer(msg_gz))
    @test is_bzip2(IOBuffer(msg_bz2))
    @test !is_bzip2(IOBuffer(msg_txt))
end

end
